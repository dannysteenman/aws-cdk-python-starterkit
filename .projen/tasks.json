{
  "tasks": {
    "build": {
      "name": "build",
      "description": "Full release build",
      "steps": [
        {
          "spawn": "default"
        },
        {
          "spawn": "pre-compile"
        },
        {
          "spawn": "compile"
        },
        {
          "spawn": "post-compile"
        },
        {
          "spawn": "test"
        },
        {
          "spawn": "package"
        }
      ]
    },
    "clobber": {
      "name": "clobber",
      "description": "hard resets to HEAD of origin and cleans the local repo",
      "env": {
        "BRANCH": "$(git branch --show-current)"
      },
      "steps": [
        {
          "exec": "git checkout -b scratch",
          "name": "save current HEAD in \"scratch\" branch"
        },
        {
          "exec": "git checkout $BRANCH"
        },
        {
          "exec": "git fetch origin",
          "name": "fetch latest changes from origin"
        },
        {
          "exec": "git reset --hard origin/$BRANCH",
          "name": "hard reset to origin commit"
        },
        {
          "exec": "git clean -fdx",
          "name": "clean all untracked files"
        },
        {
          "say": "ready to rock! (unpushed commits are under the \"scratch\" branch)"
        }
      ],
      "condition": "git diff --exit-code > /dev/null"
    },
    "compile": {
      "name": "compile",
      "description": "Only compile"
    },
    "default": {
      "name": "default",
      "description": "Synthesize project files",
      "steps": [
        {
          "exec": "python .projenrc.py"
        }
      ]
    },
    "deploy": {
      "name": "deploy",
      "description": "Deploys your CDK app to the AWS cloud",
      "steps": [
        {
          "exec": "cdk deploy",
          "receiveArgs": true
        }
      ]
    },
    "destroy": {
      "name": "destroy",
      "description": "Destroys your cdk app in the AWS cloud",
      "steps": [
        {
          "exec": "cdk destroy",
          "receiveArgs": true
        }
      ]
    },
    "dev:deploy": {
      "name": "dev:deploy",
      "description": "Deploy the stacks on the DEV account",
      "env": {
        "CDK_DEFAULT_ACCOUNT": "987654321012",
        "ENVIRONMENT": "dev"
      },
      "steps": [
        {
          "exec": "cdk deploy --require-approval never *Stack-dev"
        }
      ]
    },
    "dev:destroy": {
      "name": "dev:destroy",
      "description": "Destroy the stacks on the DEV account",
      "env": {
        "CDK_DEFAULT_ACCOUNT": "987654321012",
        "ENVIRONMENT": "dev"
      },
      "steps": [
        {
          "exec": "cdk destroy --force *Stack-dev"
        }
      ]
    },
    "dev:diff": {
      "name": "dev:diff",
      "description": "Diff the stacks on the DEV account",
      "env": {
        "CDK_DEFAULT_ACCOUNT": "987654321012",
        "ENVIRONMENT": "dev"
      },
      "steps": [
        {
          "exec": "cdk diff --require-approval never *Stack-dev"
        }
      ]
    },
    "dev:synth": {
      "name": "dev:synth",
      "description": "Synth the stacks on the DEV account",
      "env": {
        "CDK_DEFAULT_ACCOUNT": "987654321012",
        "ENVIRONMENT": "dev"
      },
      "steps": [
        {
          "exec": "cdk synth"
        }
      ]
    },
    "diff": {
      "name": "diff",
      "description": "Diffs the currently deployed app against your code",
      "steps": [
        {
          "exec": "cdk diff"
        }
      ]
    },
    "eject": {
      "name": "eject",
      "description": "Remove projen from the project",
      "env": {
        "PROJEN_EJECTING": "true"
      },
      "steps": [
        {
          "spawn": "default"
        }
      ]
    },
    "install": {
      "name": "install",
      "description": "Install dependencies and update lockfile",
      "steps": [
        {
          "exec": "poetry update"
        }
      ]
    },
    "install:ci": {
      "name": "install:ci",
      "description": "Install dependencies with frozen lockfile",
      "steps": [
        {
          "exec": "poetry check --lock && poetry install"
        }
      ]
    },
    "package": {
      "name": "package",
      "description": "Creates the distribution package",
      "steps": [
        {
          "exec": "poetry build"
        }
      ]
    },
    "post-compile": {
      "name": "post-compile",
      "description": "Runs after successful compilation",
      "steps": [
        {
          "spawn": "synth:silent"
        }
      ]
    },
    "pre-compile": {
      "name": "pre-compile",
      "description": "Prepare the project for compilation"
    },
    "publish": {
      "name": "publish",
      "description": "Uploads the package to PyPI.",
      "steps": [
        {
          "exec": "poetry publish"
        }
      ]
    },
    "publish:test": {
      "name": "publish:test",
      "description": "Uploads the package against a test PyPI endpoint.",
      "steps": [
        {
          "exec": "poetry publish -r testpypi"
        }
      ]
    },
    "synth": {
      "name": "synth",
      "description": "Synthesizes your cdk app into cdk.out",
      "steps": [
        {
          "exec": "cdk synth"
        }
      ]
    },
    "synth:silent": {
      "name": "synth:silent",
      "description": "Synthesizes your cdk app into cdk.out and suppresses the template in stdout (part of \"yarn build\")",
      "steps": [
        {
          "exec": "cdk synth -q"
        }
      ]
    },
    "test": {
      "name": "test",
      "description": "Run tests",
      "steps": [
        {
          "exec": "pytest"
        }
      ]
    },
    "test:deploy": {
      "name": "test:deploy",
      "description": "Deploy the stacks on the TEST account",
      "env": {
        "CDK_DEFAULT_ACCOUNT": "123456789012",
        "ENVIRONMENT": "test"
      },
      "steps": [
        {
          "exec": "cdk deploy --require-approval never *Stack-test"
        }
      ]
    },
    "test:destroy": {
      "name": "test:destroy",
      "description": "Destroy the stacks on the TEST account",
      "env": {
        "CDK_DEFAULT_ACCOUNT": "123456789012",
        "ENVIRONMENT": "test"
      },
      "steps": [
        {
          "exec": "cdk destroy --force *Stack-test"
        }
      ]
    },
    "test:diff": {
      "name": "test:diff",
      "description": "Diff the stacks on the TEST account",
      "env": {
        "CDK_DEFAULT_ACCOUNT": "123456789012",
        "ENVIRONMENT": "test"
      },
      "steps": [
        {
          "exec": "cdk diff --require-approval never *Stack-test"
        }
      ]
    },
    "test:synth": {
      "name": "test:synth",
      "description": "Synth the stacks on the TEST account",
      "env": {
        "CDK_DEFAULT_ACCOUNT": "123456789012",
        "ENVIRONMENT": "test"
      },
      "steps": [
        {
          "exec": "cdk synth"
        }
      ]
    },
    "watch": {
      "name": "watch",
      "description": "Watches changes in your source code and rebuilds and deploys to the current account",
      "steps": [
        {
          "exec": "cdk deploy --hotswap"
        },
        {
          "exec": "cdk watch"
        }
      ]
    }
  },
  "env": {
    "VIRTUAL_ENV": "$(poetry env info -p || poetry run poetry env info -p)",
    "PATH": "$(echo $(poetry env info -p)/bin:$PATH)",
    "CDK_DEFAULT_REGION": "eu-west-1"
  },
  "//": "~~ Generated by projen. To modify, edit .projenrc.py and run \"npx projen\"."
}
